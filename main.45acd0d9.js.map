{"version":3,"sources":["scripts/main.js"],"names":["mainButton","document","querySelector","ROW_NUMBER","COLUNM_NUMBER","BOARD","createBoard","score","GameStatus","setFiledGame","gameField","tableBody","createElement","i","row","j","cell","id","className","append","startField","push","renderFiledGame","forEach","rowIndex","value","columnIndex","updateCell","getElementById","innerHTML","classList","add","switchMessage","nameMessage","toggle","startGame","resetGame","addValueToField","renderScore","addEventListener","keyDownHandler","hasEmptyCells","randomRow","Math","floor","random","randomColunm","keyCode","event","initialBoard","JSON","parse","stringify","moveDown","moveUp","moveRight","moveLeft","currentBoard","isWin","isLose","col","length","vector","newVector","slide","slice","reverse","vectorCurrent","vectorLength","filter","some","winGame","currentValue","loseGame","removeEventListener","contains","remove"],"mappings":"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","file":"main.45acd0d9.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// write your code here\n\nconst mainButton = document.querySelector('.start');\n\nconst ROW_NUMBER = 4;\nconst COLUNM_NUMBER = 4;\n\nconst BOARD = createBoard();\n\nlet score = 0;\nlet GameStatus = '';\n\nsetFiledGame();\n\nfunction setFiledGame() {\n  const gameField = document.querySelector('.game-field');\n  const tableBody = document.createElement('tbody');\n\n  for (let i = 0; i < ROW_NUMBER; i++) {\n    const row = document.createElement('tr');\n\n    for (let j = 0; j < COLUNM_NUMBER; j++) {\n      const cell = document.createElement('td');\n\n      cell.id = `${i}-${j}`;\n\n      cell.className = 'field-cell';\n      row.append(cell);\n    }\n    tableBody.append(row);\n  }\n  gameField.append(tableBody);\n}\n\nfunction createBoard() {\n  const startField = [];\n\n  for (let i = 0; i < ROW_NUMBER; i++) {\n    startField.push([]);\n\n    for (let j = 0; j < COLUNM_NUMBER; j++) {\n      startField[i][j] = 0;\n    }\n  }\n\n  return startField;\n}\n\nfunction renderFiledGame() {\n  BOARD.forEach((row, rowIndex) => {\n    row.forEach((value, columnIndex) => {\n      const cell = document.getElementById(`${rowIndex}-${columnIndex}`);\n\n      updateCell(cell, value);\n    });\n  });\n}\n\nfunction updateCell(cell, value) {\n  cell.innerHTML = value === 0 ? '' : value;\n  cell.className = 'field-cell';\n\n  if (value !== 0) {\n    cell.classList.add(`field-cell--${value}`);\n  }\n}\n\nmainButton.addEventListener('click', () => {\n  if (!mainButton.classList.contains('restart')) {\n    mainButton.classList.remove('start');\n    mainButton.classList.add('restart');\n    mainButton.innerHTML = 'Restart';\n\n    switchMessage('start');\n  }\n\n  if (GameStatus === 'lose') {\n    switchMessage('lose');\n  }\n\n  if (GameStatus === 'win') {\n    switchMessage('win');\n  }\n\n  GameStatus = '';\n\n  startGame();\n});\n\nfunction switchMessage(nameMessage) {\n  const message = document.querySelector(`.message-${nameMessage}`);\n\n  message.classList.toggle('hidden');\n}\n\nfunction startGame() {\n  resetGame();\n  addValueToField();\n  addValueToField();\n  renderFiledGame();\n  renderScore();\n\n  document.addEventListener('keydown', keyDownHandler);\n}\n\nfunction resetGame() {\n  for (let i = 0; i < ROW_NUMBER; i++) {\n    for (let j = 0; j < COLUNM_NUMBER; j++) {\n      BOARD[i][j] = 0;\n    }\n  }\n\n  score = 0;\n}\n\nfunction addValueToField() {\n  if (!hasEmptyCells()) {\n    return;\n  }\n\n  while (true) {\n    const randomRow = Math.floor(Math.random() * ROW_NUMBER);\n    const randomColunm = Math.floor(Math.random() * COLUNM_NUMBER);\n\n    if (BOARD[randomRow][randomColunm] === 0) {\n      BOARD[randomRow][randomColunm] = Math.random() < 0.9 ? 2 : 4;\n\n      break;\n    }\n  }\n}\n\nfunction keyDownHandler() {\n  const keyCode = event.keyCode;\n  const initialBoard = JSON.parse(JSON.stringify(BOARD));\n\n  switch (keyCode) {\n    case 40:\n      moveDown();\n      break;\n\n    case 38:\n      moveUp();\n      break;\n\n    case 39:\n      moveRight();\n      break;\n\n    case 37:\n      moveLeft();\n      break;\n  }\n\n  const currentBoard = JSON.parse(JSON.stringify(BOARD));\n\n  if (JSON.stringify(initialBoard) !== JSON.stringify(currentBoard)) {\n    addValueToField();\n    renderScore();\n    renderFiledGame();\n\n    isWin();\n    isLose();\n  }\n}\n\nfunction moveUp() {\n  for (let col = 0; col < BOARD[0].length; col++) {\n    const vector = [];\n\n    for (let row = 0; row < BOARD.length; row++) {\n      vector.push(BOARD[row][col]);\n    }\n\n    const newVector = slide(vector, BOARD.length);\n\n    for (let row = 0; row < BOARD.length; row++) {\n      BOARD[row][col] = newVector[row];\n    }\n  }\n}\n\nfunction moveDown() {\n  for (let col = 0; col < BOARD[0].length; col++) {\n    const vector = [];\n\n    for (let row = BOARD.length - 1; row >= 0; row--) {\n      vector.push(BOARD[row][col]);\n    }\n\n    const newVector = slide(vector, BOARD.length);\n\n    for (let row = BOARD.length - 1; row >= 0; row--) {\n      BOARD[row][col] = newVector[BOARD.length - 1 - row];\n    }\n  }\n}\n\nfunction moveLeft() {\n  BOARD.forEach((row, rowIndex) => {\n    BOARD[rowIndex] = slide(row, ROW_NUMBER);\n  });\n}\n\nfunction moveRight() {\n  BOARD.forEach((row, rowIndex) => {\n    BOARD[rowIndex] = slide(row.slice().reverse(), ROW_NUMBER).reverse();\n  });\n}\n\nfunction slide(vectorCurrent, vectorLength) {\n  let vector = vectorCurrent.filter(value => value !== 0);\n\n  for (let i = 0; i < vector.length - 1; i++) {\n    if (vector[i] === vector[i + 1]) {\n      vector[i] *= 2;\n      vector[i + 1] = 0;\n\n      score += vector[i];\n    }\n  }\n\n  vector = vector.filter(value => value !== 0);\n\n  while (vector.length < vectorLength) {\n    vector.push(0);\n  }\n\n  return vector;\n}\n\nfunction renderScore() {\n  document.querySelector('.game-score').innerHTML = score;\n}\n\nfunction hasEmptyCells() {\n  for (let row = 0; row < BOARD.length; row++) {\n    if (BOARD[row].some(value => value === 0)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isWin() {\n  for (let row = 0; row < BOARD.length; row++) {\n    if (BOARD[row].some(value => value === 2048)) {\n      winGame();\n    }\n  }\n}\n\nfunction isLose() {\n  for (let row = 0; row < BOARD.length; row++) {\n    if (BOARD[row].some(value => value === 0)) {\n      return;\n    }\n  }\n\n  for (let row = 0; row < BOARD.length; row++) {\n    for (let col = 0; col < BOARD[row].length; col++) {\n      const currentValue = BOARD[row][col];\n\n      if (row > 0 && BOARD[row - 1][col] === currentValue) {\n        return;\n      }\n\n      if (row < BOARD.length - 1 && BOARD[row + 1][col] === currentValue) {\n        return;\n      }\n\n      if (col > 0 && BOARD[row][col - 1] === currentValue) {\n        return;\n      }\n\n      if (col < BOARD[row].length - 1 && BOARD[row][col + 1] === currentValue) {\n        return;\n      }\n    }\n  }\n  loseGame();\n}\n\nfunction winGame() {\n  document.removeEventListener('keydown', keyDownHandler);\n  switchMessage('win');\n  GameStatus = 'win';\n}\n\nfunction loseGame() {\n  document.removeEventListener('keydown', keyDownHandler);\n  switchMessage('lose');\n  GameStatus = 'lose';\n}\n"]}